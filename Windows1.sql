--THE BEST WAY TO UNDERSTAND THE WINDOW FUNCTION IS BY FIRST GOING THROUGH AN
--AGGREGATE FUNCTION
SELECT *
FROM EMPLOYEE;


--EXTRACT THE MAX SALARY  IN EACH DEPARTMENT
SELECT DEPARTMENT_NAME,MAX(SALARY) AS MAXIMUM_SAL
FROM EMPLOYEE
GROUP BY DEPARTMENT_NAME;


--===============
--HERE WE HAVE USED OVER() CLAUSE ,WHAT SQL DO IS ,IT WILL TREAT MAX() FUNCTION
--AS WINDOWS/ANALYTICS FUNCTION
--OVER() BASICALLY USED TO SPECIFY SQL YOU NEED TO CREATE WINDOW OF RECORD
--IF YOU DONT SPECIFY ANY COLUMN WHAT HAPPENS IS ,SQL WILL CREATE ONE WINDOW 
--FOR ALL THE RECORDS IN THE RESULTSET, SO BASICALLY THERE ARE 24 RECORDS
--ITS GOING TO CREATE ONE WINDOW and FOR THOSE 24 RECORDS SQL IS GOING TO APPLY
--MAX() WINDOW FUNCTION i.e 11000 IN THIS CASE
SELECT E.*,
MAX(SALARY) OVER() AS MAX_SALARY
FROM EMPLOYEE E;

--EXTRACT THE MAX SALARY IN EACH DEPARTMENT BUT ALONG WITH THAT DISPLAY
--ALL THE OTHER DETAILS OF EMPLOYEETABLE

SELECT E.*,
MAX(SALARY) OVER(PARTITION BY DEPARTMENT_NAME) AS MAXI
FROM EMPLOYEE E;

--The maximum salary earned by IT department is 11000,hence 11000 is showing in resultset


--02.WHAT IS ROWNUM?
--ANS.AS THE NAME SUGGEST ITS JUST GOING TO ASSIGN A UNIQUE VALUE TO EACH 
--OF THE RECORD IN THE TABLE.
--ROW_NUMBER() REQUIRES ORDER BY CLAUSE


--FETCH THE FIRST 2 EMPLOYEES FROM EACH DEPARTMENT TO JOIN THE COMPANY
SELECT *FROM(
SELECT E.*,
  ROW_NUMBER() OVER(PARTITION BY DEPARTMENT_NAME ORDER BY EMPLOYEE_ID) AS RN
FROM EMPLOYEE E
)WHERE RN<=2;


SELECT *FROM(
SELECT E.*,
ROW_NUMBER() OVER(PARTITION BY DEPARTMENT_NAME ORDER BY EMPLOYEE_ID) AS RN
FROM EMPLOYEE E
)WHERE RN<3;


--03.WHAT IS RANK?

--FETCH THE TOP 3 EMPLOYEE IN EACH DEPARTMENT EARNING THE MAX SALARY
SELECT *FROM(
SELECT E.*,
RANK() OVER(PARTITION BY DEPARTMENT_NAME ORDER BY SALARY DESC) AS RNK
FROM EMPLOYEE E
)WHERE RNK<4;
